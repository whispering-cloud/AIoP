# Configuration file

~CONFIG_VERSION: 7

common {
    # Allow to use NPOT Texture in order to reduce resource consumption.
    B:allowNPOTTexture=false

    # Experimental: Try interpolation for MOD original font renderer.
    B:alternativeInterpolation=false

    # Automatic detection of brightness.
    B:autoBrightness=true

    # Enable a blur reduction for fonts less than or equal to the specified size.(0~16)
    I:blurReduction=10

    # Brightness correction level for interpolated fonts.
    I:brightness=3

    # This value is an option to adjust the rounding method of the character width that can be obtained by getCharWidth().
    # The character widths are rounded up if the fractions of the character width are equal to or more than this fraction value.
    # Other character widths are rounded down. (Default: 0.3333335)
    D:charWidthFractionToRoundUp=0.3333335

    # Disable italic for small fonts.
    B:disableSmallItalic=false

    # Enable alpha blending
    B:enableAlphaBlend=true

    # Enable anisotropic filtering.
    B:enableAnisotropicFilter=true

    # Enable double rendering
    B:enableDouble=false

    # Enable linear interpolation
    B:enableInterpolation=true

    # Enable mipmap for fonts.
    B:enableMipmap=true

    # Enable premultiplied alpha instead of straight alpha.
    B:enablePremultipliedAlpha=false

    # Disable interpolation for characters drawn with high magnification.
    B:excludeHighMag=true

    # Disable interpolation for the integral multiple of default size.
    B:excludeIntMultiple=true

    # Tolerance (in percent) for rounding font scale to integer.(Default: 0.5)
    D:fontScaleRoundingTolerance=0.5

    # Force to use unicode font.
    B:forceUnicode=false

    # Disable interpolation for fonts above this magnification when excludeHighMag is enabled.(Default: 3.0)
    D:limitMagnification=3.0

    # Mipmap level.
    I:mipmapLevel=4

    # Mipmap LOD bias.
    I:mipmapLodBias=-3

    # Mipmap LOD bias for overlay screen.
    I:overlayLodBias=-5

    # Prioritize performance rather than quality.
    B:performanceMode=false

    # Enable odd multiple GUI scale factors (x3,x5,...) when using unicode font.
    B:removeScaleRestriction=true

    # Select run mode. (0:Enable mod, 1:Disable mod, 2:Disable mod(Optimization only)
    I:runMode=0

    # To save memory and VRAM usage by adjusting some parameters when a large amount of memory or VRAM will be required.
    # (0:off, 1:conservative, 2:moderate, 3:aggressive)
    I:saveMemory=1

    # Shadow length. (0~10)
    I:shadowLength=5

    # Shadows are rendered smoothly by using linear interpolation if the font resolution is more than or equal to this value.
    I:smoothShadowThreshold=24

    # Correct character width error in a normal precision mode as much as possible.
    B:widthErrorCorrection=true
}


debug {
    # Enable debug log.
    B:debugLog=false

    # Debug option
    S:debugOption=

    # Show event log on the game screen.
    B:showLogInChat=false
}


font {
    # Use the fonts installed in the operating system.
    B:useOSFont=false

    # Primary font name.
    # (The font installed in the system or existing in the externalFontPaths folders (default:<minecraft dir>/fontfiles).)
    S:fontName=SansSerif

    # Secondary font name. It is used if the character cannot be rendered with the primary font.
    # (The font installed in the system or existing in the externalFontPaths folders (default:<minecraft dir>/fontfiles).)
    S:secondaryFontName=SansSerif

    # Primary font style.(0:plain, 1:bold, 2:italic, 3:bold+italic)
    I:primaryFontStyle=0

    # Secondary font style.(0:plain, 1:bold, 2:italic, 3:bold+italic)
    I:secondaryFontStyle=0

    # Enable anti-alias for OS fonts.(0:off, 1:normal, 2:high precision)
    I:fontAntiAlias=0

    # Enable emphasis for OS fonts. (0:off, 1:Ascii only, 2:Non-Ascii, 3:All)
    I:fontEmphasis=0

    # OS font resolution. (0:8px, 1:10px, 2:12px, 3:16px, 4:24px, 5:32px, 6:48px, 7:64px)
    I:fontResolution=3

    # Enable automatic font size detection for the font resolution.
    B:fontAutoSizing=true

    # Reference characters used for font-sizing.
    # If this option is not specified, the default value "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz" is used.
    S:fontSizingRefChars=

    # Scaling factor of system font size.
    D:fontSizeScaleFactor=1.0

    # Transform non-default font narrowly or widely for MC default charset.
    D:widthFactorDefaultCharset=1.0

    # Transform non-default font narrowly or widely for unicode charset.
    D:widthFactorUnicodeCharset=1.0

    # Font gap.
    I:fontGap=0

    # Space width for system fonts.
    # (0:space width specified by the primary font, 1~3:custom width, 4:Minecraft default width)
    I:fontSpaceWidth=0

    # Align baseline among different fonts.
    B:fontAlignBaseline=true

    # Target to replace fonts. (0:Exclude special fonts specified by mods, 1:All fonts)
    I:fontTargetToReplace=0

    # Internal state.
    B:fontDetailList=false

    # Margin around the glyph image.
    I:glyphImageMargin=1
}


global {
    # (Experimental) Initialize the mod asynchronously. It reduces initialization processing time.
    B:asyncInitialization=true

    # Disable font selection GUI only.
    B:disableFontSelectionGui=false

    # Disable In-Game configuration GUI.
    B:disableInGameConfigGui=false

    # Enable per-player configuration. (Settings in common category)
    B:enablePerPlayerConfig=true

    # Paths to font file folder. Default is "<Minecraft folder>/fontfiles"
    S:externalFontsPaths <
        fontfiles
     >

    # These font renderer classes use high precision font width.
    # Best quality, but width calculation compatibility may slightly decreases
    # in other font renderer other than the Minecraft default font renderer.
    S:highPrecisionClasses <
        net.minecraft.client.gui.FontRenderer
     >

    # High precision mode for MC standard font renderer is not used if these mods(mod ids) exist.
    # This option is useful when there is a text wrapping problem with particular MODs or
    # when there is an error in computing the text width.
    # This option takes precedence over setMcRendererToHighPrecision option.
    S:modsNotUsingHighPrecision <
        betterquesting
     >

    # Minecraft standard font renderer object is always set to high precision even if it is replaced.
    B:setMcRendererToHighPrecision=true

    # Tweak the texture manager in order to make "Force LERP" function usable.
    B:tweakLoadTexture=true

    # Tweak the experience level rendering.
    B:tweakRenderExperience=true

    # Tweak the scaled resolution in order to make "Unlock Large GUI" function usable.
    B:tweakScaledResolution=true

    # These font renderer classes are not affected by this mod.
    S:unaffectedClasses <
        malte0811.industrialWires.client.panelmodel.RawModelFontRenderer
     >

    # These font renderer classes is most high compatibility with vanilla font width calculation,
    # but the precision of font width calculation is more poorer than the other precision modes.
    S:vanillaPrecisionClasses <
     >

    # Workaround for the broken font width of a mod. Some mods have an independent font renderer which
    # directly refer charWidth/glyphWidth values of a MC standard font renderer in order to get the font
    # width values of the Minecraft standard fonts or the resource pack fonts. If this workaround is true,
    # charWidth and glyphWidth of the MC standard font renderer keep the font width values of the MC
    # standard fonts or the resource pack fonts even if using the platform fonts.
    # (ex. MalisisDoors(MalisisCore) needs this workaround.)
    B:workaroundKeepOriginalWidthValues=true

    # Workaround for transparent texts on a scoreboard.
    B:workaroundTransparentScoreboard=true

    # Workaround for the issue that Java8 cannot    ﬂµ|El’ùÃcΩŒX“!Ô19ÃØäÅ‰QXék∆‘‰ß_3π´3ﬂˆÅ∆1÷æU·[âŒfÖgË∞wGâ…Ç5|Æ˝±ˇÜ®1∑∂“’F®¡Uâ$∆JısÊcóÓÌBq\ŒæüQ—:hVç#Y+Îr^ã©#∫e’9«5çÿ$L†›ÌM®2‰M†”n4t‹L´8≥Mo˘°¿Ôf,ë˜D„‰Ω`8mºüäÑZ˜ '©EK$g≥Ö]lxvõ3ÙÉïÆéãD›RyQD™T/ÓéK±˚™Ò“’ë2Q⁄≈ãŸ∏~'Ñ∞fƒ”"tcu9fÓ–€KQx–Ù¿»äÈË√G£“†‹~¥lµ≤ˇı∏SÀcË_ø(%à˚‚&“¸ê2 ÅÏ‡S»ËD∂5£K˘Ñ¿xJãÓT‹4P?ã¿3Ô•ÚDçÍè~EèÒ§ªyN«T‘ÚZ§,•?Å%e_$Ë◊.[†ú <úA¥Á,N√ô∆RæÖπª)S_æÚèÎ›q~>	$µHøç¢nôáŸA∏’,SÂ,VZı≠Q„∂B|·	µSˇê±Ÿﬂm"iè≈∆÷7KN√Ì'$ëŒÂ@û÷Ö∞Fr∏q^◊PÀ^ÓÖ‡ÎàòMq`Mé˙∏◊’vÓk’!íÒÊyïÂ5ÍÀ∆s›˘€9I.ì'ÉZiñòˆX.™ Ñ‰ÿxÉp.ª¥æh›b&Bd26`a·]èrrÑ¶1˘f∆*c-´ûórœ_√Sn»˘eM’Mz_7w´`#@Øıû*’Œä§„4 ÌhpƒõÒŸà≤a;ÙÂ ≤Ös^™ éô<ò†á]”∂TJÁ Ì˝Úîî{mô!Ó;ΩK∏ÔvrÛÅ∂5ÛØuVµΩê@ˇDæ“0°†g≈éªb^/u˛0¨=çnì6éwz{©_∏ÄSÅ¶ëô|‚—≈∆a”¨©]a≈}OAˆ
fı,¨	µC#<‹î:8[›ﬂ"|C†¨àQÔ¢óÃ£{ë‚4l–¶ú‰ç˜∑4ÉÿÖX!2w¬˛L{ıı@tÀ	boûÕF¢ªÀ 8Ùˇ±g$ÖàíVgUg™‡NJÑ‘ˇ%A»% ‡ÖÌR¥¿¯ävoú{≥F[VökíC oIXŒÜ¸i≤‚^˚Ë≠“êUFÈéÆ¬°/à®t7á@∑zΩ™ŸïPi˙Å<™äåªÓGr◊/
É*vnü.
uñCƒ∞[G{¢&Î∏†
…∞G$#[oxÿ≥m˘’ç˚ƒ÷&N•:Â≥÷0îuvÒì„9D%W#VúDõá‚˚w“É1ãvÌ‰R—, dıZ¬∏“Ç,ÑÕˇj `-Áåg<93ê&åÚùìWßùŒ˝Ä›Îx∆≈Y˝M•F∂+®∞Ñ6[“`FäÇûpM‰rLÚƒ‚O˜	[ÄdÕy®Ÿ
ﬁΩ:∫Q$ëïD¢\ó®c≤Ùê˘4Pké≥4ÀüëCñEä–QÆ}fﬂ -å(^ÅV]⁄3Üóa?* -È˝ìÜbÁZÙ#’qöww¬îT ä‡≥~ï˝ªüó©»Z¿⁄2ú§m¸(˛iúL«˙˘⁄Ã±pÄÕëáÄ
s!1òÊ)Ïéx;≈|Z≥=cbu‰¨¯‘TíÂ,w(á9∑d¢j}÷…√ËE‰ú
—FoŒèöX,v{Æ˚Ç®˛€8⁄Ø€Ñ&'˛œ=˚—∑=äì∑]Ï`á(Ê’lÌ∏ÉGÆÔÎõ˚T±˙m%Ôwºî “x@~qÜ&B˙ﬁ!`®¯XßÁî¬ÈW˜xZÇ1§÷ódàí,ÇYCÇΩ«¡T(J¸˜TÆ˙"®À]¶8íË9U∂0#ºÇÊßÖ˛Á÷≠Õp· Hb¡∆‡›?n‘£ò™Ω8≈Ïè.¬ô(âbú„$ôOÙÙ‘Çªˆª˚ÇP¢P;°'åÚãÕ+äWºWBÄ…ò‡¶åb®zçæ÷ÜUI»V:5uu2£û_.Nín˝ô≥Ò1ª^ÇÆVå≤ï†5ŒRÉﬁ¥Wc⁄ÊòspÏßÕËoTå¢Ã…°ÛúÖ´X+4_œQùüŒ6˜hmù!ôO›:bC'ﬂ®’ô•¿ËTO ΩwØgÀ˛Ω¶ôãË◊ y~%Ωá©f?ä/¸?⁄ùÙœ¥òpEôQ4¯knåw$˜®ﬁÕ£˚¨“_ÛTúÒﬂG¥`ëˇ‚7’CU§«ë∑“cVôBß∑ô…O$‘¢Qπ∞˙¬¥?ˆ3Mõ$ƒD%˚FƒO≈·À≥ﬂãpÈPº\kôìhöc´Q»Ä8∏7xÊ‡ñõıQWD¢K?iÇ±ë2nJΩÕkB≠æ∞ØÂ)ÈmËc÷Ëã(ETÁVíÀ‹|∞Õ”r}ÛΩPÁ˜Ö`>r_qê[ˇhôÔ“@DhHVÉ˙÷:Â·$.‘¯≥∂ï^Sÿ˝5ê9˝ (Bøw–†AS4Ç^]8Â"–¯œÔx\µ≈OŸ¶≤∂„Ía6¸ΩÅHŸX$ˇ2a±≥Ï9`VwXõÑW)”¶Õ≤Zõ∆G…LTa◊•©A“\“O2K@£.;∑^ﬁï90πá12eKà:üöÁ·û≥®+ªÛ92ÍßÌp®EæfçùyË`M<P|ˆ'~Ü:4—p≤Ñ`ü`‡Ç•è	sö∂çkÔÄÒÑ‘7ìñ\ö°9l'`«yïµ∞Ì*GäbıûçW¥—@ö»0GŒJ¬À˙Ÿ?N=ûñú∏,S¥n±»e›R6À&¿ñ¿9{ˇSøîíÈ◊`6[9Òt¥jÆ7R”DƒKØø¨åæ5Es÷P7Ì.;i∂˛ØﬁΩü%ÕnV£3Ay¯ÌIt⁄W˜ÚYqÒÄ¬ﬁ4%vdå'⁄ˆ’L]ô8sÁ˚x^≤˚~êÂıì^ò÷v{0te„®vµ˛‰óvìò(%°û£Túº\i<í™Ô˚VÈ¸ºÕ=¯ô›&ı◊	Ú∆vóõuø~<ƒ¥«o~ço§ÀÈR]†a%G›å°∑(PtiOX…+ÿ%úG"eKE‡¨ÍÇΩåN„Ï‰È†—@ Z◊‡GÉ-/\B·û¸XÕ«)éÅÈc,◊ÃBKˇBâﬁúcBÓu~˛µeπì…≤Æ∞)R*¡©∆RcO¨ñ®ÆÂÆÄΩtÑˇZÛ◊©
’KÓ/ÒH-‹Kãêﬂ±±J˝6[‹ÎÔa∏±á˜!ˇQãèA2Øê¡Ê®Ωˇ\(u=út^'≈´èG∂»Î2≈òtKS%•ÑƒÆ˛™=¯]Å¸vÒ¥π3‚·ä%Ìœ ÿ\∫ı;≈ﬁπ∏$Ω)aTòo®ìD
¢“ü∑‚ä˘Ë.ˆ…\©ÿπ~H	„1˜œaFm—'p”.µ˛™[÷]„—ˆO—ïÂaµ„yf€Áùnﬁâ≥‘-Âº•ë3≈<‚ﬂÈ ´v…UA›ÚÏ®ø7†¯Ug,®ƒ“©‰”*6oÍ∆v	ÜÈHPY50Y',Î∑+Ô®ù¨\aÍå¸18ò“<tG]J§ 2CÖr‡z!∆áÏ∂p˜Q≤öŒüo#@ÅÙ8Ût¿J.ßG≤›#ïÁh∂YÁ•í∞ÂàÀ⁄(föWo(ÙFB“0a¨¨ûo÷‡Eåò¬jÈ∫t C§¢
ÙÖFXd8‹Óz(*]˘Ê.ìË7FvMﬂ£9/7ßÔàlÚ§ô“ˇçtæÄ‹åê»&üóxÁp¿% â9Î1‹'∑Çëü‘˝®¿∞\vcj»p¸4>#5O$;“‹4‚5ZñÁ•£Ä< xs÷} Í´Iˆﬂ‚‹Cª÷◊ãK<4ÉÊÇ¶∂b®3ûçuP>˘äö¸	ÓÓ˝π3O$õsÖâ∫`_ÆXRÎÎ!·àaX'ç…ƒ™bD(¬•?NìTo˘˝PÅëﬁ|Llm™Ûr¥ˆ;8Ï:∆õÕP\- Y“p$€ô˚A